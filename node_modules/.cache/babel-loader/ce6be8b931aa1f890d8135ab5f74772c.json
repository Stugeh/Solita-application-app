{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/tuukka/Javascript/Solita-application-app/src/App.js\",\n    _s = $RefreshSig$();\n\n/* eslint react/prop-types: 0 */\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // Run the json server : npx json-server --port=3001 --watch names.json\n\nconst RenderPerson = ({\n  person\n}) => /*#__PURE__*/_jsxDEV(\"tr\", {\n  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n    children: person.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: person.amount\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 3\n}, this);\n\n_c = RenderPerson;\n\nconst App = () => {\n  _s();\n\n  const [people, setPeople] = useState([]);\n  useEffect(async () => {\n    const persons = await axios.get('http://localhost:3001/names');\n    setPeople(Object.values(persons.data));\n  }, []);\n\n  const sortByName = () => {\n    people.sort((a, b) => a.name > b.name ? 1 : -1);\n    console.log('temp', temp);\n    console.log('people', people);\n  };\n\n  const sortByAmount = () => {\n    setPeople(people.sort((a, b) => a.amount - b.amount) ? 1 : -1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sortByName,\n      type: \"submit\",\n      children: \"Sort by name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sortByAmount,\n      type: \"submit\",\n      children: \"Sort by amount\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"NAME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"AMOUNT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: people.map(person => /*#__PURE__*/_jsxDEV(RenderPerson, {\n          person: person\n        }, person.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 36\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Names in the list:\", ` ${people.length}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"iLHt2u73MC8pQH7JexuLSo07ahk=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RenderPerson\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/home/tuukka/Javascript/Solita-application-app/src/App.js"],"names":["React","useState","useEffect","axios","RenderPerson","person","name","amount","App","people","setPeople","persons","get","Object","values","data","sortByName","sort","a","b","console","log","temp","sortByAmount","map","length"],"mappings":";;;;;AAAA;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBACnB;AAAA,0BACE;AAAA,cAAKA,MAAM,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAA,cAAKD,MAAM,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,UAFF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMH,Y;;AAON,MAAMI,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,YAAY;AACpB,UAAMS,OAAO,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAU,6BAAV,CAAtB;AACAF,IAAAA,SAAS,CAACG,MAAM,CAACC,MAAP,CAAcH,OAAO,CAACI,IAAtB,CAAD,CAAT;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMC,UAAU,GAAG,MAAM;AACvBP,IAAAA,MAAM,CAACQ,IAAP,CAAY,CAACC,CAAD,EAAIC,CAAJ,KAAYD,CAAC,CAACZ,IAAF,GAASa,CAAC,CAACb,IAAZ,GAAoB,CAApB,GAAwB,CAAC,CAAhD;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBC,IAApB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBZ,MAAtB;AACD,GAJD;;AAMA,QAAMc,YAAY,GAAG,MAAM;AACzBb,IAAAA,SAAS,CAACD,MAAM,CAACQ,IAAP,CAAY,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACX,MAAF,GAAWY,CAAC,CAACZ,MAAnC,IAA6C,CAA7C,GAAiD,CAAC,CAAnD,CAAT;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAES,UAAjB;AAA6B,MAAA,IAAI,EAAC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAQ,MAAA,OAAO,EAAEO,YAAjB;AAA+B,MAAA,IAAI,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAA,kBACId,MAAM,CAACe,GAAP,CAAYnB,MAAD,iBAAY,QAAC,YAAD;AAAgC,UAAA,MAAM,EAAEA;AAAxC,WAAmBA,MAAM,CAACC,IAA1B;AAAA;AAAA;AAAA;AAAA,gBAAvB;AADJ;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAkBE;AAAA,uCAEI,IAAGG,MAAM,CAACgB,MAAO,EAFrB;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA3CD;;GAAMjB,G;;MAAAA,G;AA6CN,eAAeA,GAAf","sourcesContent":["/* eslint react/prop-types: 0 */\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Run the json server : npx json-server --port=3001 --watch names.json\n\nconst RenderPerson = ({ person }) => (\n  <tr>\n    <td>{person.name}</td>\n    <td>{person.amount}</td>\n  </tr>\n);\n\nconst App = () => {\n  const [people, setPeople] = useState([]);\n\n  useEffect(async () => {\n    const persons = await axios.get('http://localhost:3001/names');\n    setPeople(Object.values(persons.data));\n  }, []);\n\n  const sortByName = () => {\n    people.sort((a, b) => ((a.name > b.name) ? 1 : -1));\n    console.log('temp', temp);\n    console.log('people', people);\n  };\n\n  const sortByAmount = () => {\n    setPeople(people.sort((a, b) => a.amount - b.amount) ? 1 : -1);\n  };\n\n  return (\n    <div>\n      <button onClick={sortByName} type=\"submit\">\n        Sort by name\n      </button>\n      <button onClick={sortByAmount} type=\"submit\">\n        Sort by amount\n      </button>\n      <table>\n        <thead>\n          <tr>\n            <th>NAME</th>\n            <th>AMOUNT</th>\n          </tr>\n        </thead>\n        <tbody>\n          { people.map((person) => <RenderPerson key={person.name} person={person} />)}\n        </tbody>\n      </table>\n      <h3>\n        Names in the list:\n        {` ${people.length}`}\n      </h3>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}